<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Device Operations</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: #fff;
            display: flex;
            height: 100vh;
        }

        .sidebar, .right-sidebar {
            width: 250px;
            background-color: #1c2833;
            padding: 20px;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-direction: column;
        }

        .sidebar-logo {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 30px;
            text-align: center;
            color: #3498db;
        }

        .sidebar-menu {
            list-style: none;
            padding: 0;
            flex-grow: 1;
        }

        .sidebar-menu li {
            margin-bottom: 15px;
        }

        .sidebar-menu a {
            color: #bdc3c7;
            text-decoration: none;
            display: flex;
            align-items: center;
            padding: 10px;
            border-radius: 8px;
            transition: background-color 0.3s, color 0.3s;
        }

        .sidebar-menu a:hover, .sidebar-menu a.active {
            color: #fff;
            background-color: #3498db;
        }

        .sidebar-menu i {
            margin-right: 10px;
            font-size: 18px;
        }

        .main-content {
            flex-grow: 1;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
        }

        .header {
            font-size: 32px;
            font-weight: bold;
            text-align: center;
            color: #1c2833;
            background-color: #3498db;
            padding: 20px;
            border-radius: 15px;
            margin-bottom: 30px;
            width: 100%;
            box-sizing: border-box;
        }

        .input-container {
            background-color: #34495e;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            width: 100%;
            box-sizing: border-box;
            max-width: 600px;
        }

        .input-container h2 {
            color: #fff;
            margin-bottom: 20px;
            text-align: center;
        }

        .input-field {
            width: calc(100% - 22px);
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #3498db;
            border-radius: 8px;
            font-size: 14px;
            color: #fff;
            background-color: #2c3e50;
        }

        .input-field::placeholder {
            color: #bdc3c7;
        }

        .input-field:disabled {
            background-color: #2c3e50;
            color: #95a5a6;
        }

        .submit-btn, .logout-btn {
            width: auto;
            padding: 10px 20px;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
            display: block;
            margin: 0 auto;
        }

        .submit-btn:hover, .logout-btn:hover {
            background-color: #2980b9;
        }

        .device-info {
            margin-top: 30px;
        }

        .device-info p {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            color: #bdc3c7;
        }

        .device-info i {
            margin-right: 10px;
            font-size: 18px;
            color: #fff;
            width: 24px;
            text-align: center;
        }

        .device-info .label {
            font-weight: bold;
            color: #fff;
            margin-right: 10px;
        }

        .user-info {
            background-color: #34495e;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            text-align: center;
        }

        .user-email {
            color: #fff;
            font-size: 14px;
            word-break: break-all;
        }

        .logout-btn {
            margin-top: auto;
            background-color: #e74c3c;
        }

        .logout-btn:hover {
            background-color: #c0392b;
        }
        .dialog-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        
        .dialog-box {
            background: #34495e;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
            text-align: center;
            max-width: 300px;
            width: 100%;
            color: #fff;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .dialog-box h3 {
            margin-top: 0;
        }
        
        .dialog-box button {
            padding: 10px 20px;
            margin-top: 15px;
            cursor: pointer;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
        }
        .success { border-top: 5px solid #2ecc71; }
        .error { border-top: 5px solid #e74c3c; }

        .success-icon {
            color: #4caf50;
            font-size: 48px;
            margin-bottom: 10px;
        }
        
        .error-icon {
            color: #f44336;
            font-size: 48px;
            margin-bottom: 10px;
        }
        
        .dialog-btn {
            padding: 10px 20px;
            margin-top: 15px;
            cursor: pointer;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
        }
        #loadingScreen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }
        
        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 2s linear infinite;
            margin-top: 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <%
    const dialogData = {
      success: false,
      message: ''
    };
  %>
  
  <% if (typeof successMessage !== 'undefined') { %>
    <%
      dialogData.success = true;
      dialogData.message = successMessage;
    %>
  <% } else if (typeof errorMessage !== 'undefined') { %>
    <%
      dialogData.success = false;
      dialogData.message = errorMessage;
    %>
  <% } %>
  
  
  <div id="loadingScreen" style="display: none;">
    <div class="spinner"></div>
</div>
<!-- Loading Dialog -->
<div class="dialog-overlay" id="loadingDialog" style="display: none;">
    <div class="dialog-box">
        <h3>Loading...</h3>
        <div class="spinner"></div>
    </div>
</div>

  <div class="dialog-overlay" id="dialogOverlay" style="display: <%= dialogData.message ? 'flex' : 'none' %>;">
      <div class="dialog-box">
        <% if (dialogData.success) { %>
            <i class="fas fa-check-circle success-icon"></i>
            <h3 class="success">Success!</h3>
        <% } else { %>
            <i class="fas fa-exclamation-circle error-icon"></i>
            <h3 class="error">Error</h3>
        <% } %>
        <p><%= dialogData.message %></p>
        <button id="closeDialogBtn" class="dialog-btn">OK</button>
      </div>
  </div>
  

<!-- Reset Device Name Dialog -->
<div class="dialog-overlay" id="resetDialog" style="display: none;">
    <div class="dialog-box">
        <h3>Reset Device Name</h3>
        <p class="dialog-text">Are you sure do you want to work on another device?</p>
        <div style="display: flex; justify-content: center; gap: 10px;"> <!-- Added a container div with flexbox styles -->
            <button onclick="confirmResetDeviceName()" class="dialog-btn">Yes</button>
            <button onclick="closeDialog('resetDialog')" class="dialog-btn">Cancel</button>
        </div>
    </div>
</div>

    <div class="sidebar">
        <div class="sidebar-logo">Activities</div>
        <ul class="sidebar-menu">
            <li><a href="#" onclick="showInput('changePrimaryUser')"><i class="fas fa-user"></i>Change Primary User</a></li>
            <li><a href="#" onclick="showInput('removeDevice')"><i class="fas fa-trash-alt"></i>Remove Device</a></li>
            <li><a href="#" onclick="showInput('iphoneLost')"><i class="fas fa-mobile-alt"></i>iPhone Lost</a></li>
            <li><a href="#" onclick="showInput('bitlockerKey')"><i class="fas fa-key"></i>BitLocker Key</a></li>
        </ul>
        
    </div>

    <div class="main-content">
        <div class="header">Device Operations</div>
        <div id="inputContainer"></div>
    </div>

    <div class="right-sidebar">
        <div class="user-info">
            <span class="user-email"><%= deviceName %></span>
        </div>
        <div class="sidebar-logo">Device Info</div>
        <div class="device-info">
            <p><i class="fas fa-laptop"></i><span class="label">Device Name:</span><span id="deviceNameDisplay"><%= deviceName %></span></p>
            <p><i class="fas fa-check-circle"></i><span class="label">Serial Number:</span><span id="deviceSerialDisplay"><%= deviceSerial %></span></p>
            <p><i class="fab fa-windows"></i><span class="label">OS:</span><span id="operatingSystemDisplay"><%= operatingSystem %></span></p>
            <p><i class="fas fa-shield-alt"></i><span class="label">Compliance:</span><span id="complianceDisplay"><%= compliance %></span></p>
            <p><i class="fas fa-user"></i><span class="label">Primary User:</span><span id="primaryUserDisplay"><%= primaryUser %></span></p>
            <p><i class="fas fa-clock"></i><span class="label">Last Check-In:</span><span id="lastCheckInDisplay"><%= lastCheckIn %></span></p>
        </div>
        <button class="reset-btn" onclick="resetDeviceName()"><i class="fas fa-sync-alt"></i> Reset Device Name</button-->
        <button class="logout-btn" onclick="logout()"><i class="fas fa-sign-out-alt"></i> Logout</button>
    </div>
    <script>
        const closeDialogBtn = document.getElementById('closeDialogBtn');
        closeDialogBtn.addEventListener('click', () => {
            const dialogOverlay = document.getElementById('dialogOverlay');
            dialogOverlay.style.display = 'none';
        });
    </script>
    <script>
        //const loadingScreen = document.getElementById('loadingDialog');

        function showLoadingScreen() {
            const loadingScreen = document.getElementById('loadingDialog');
            loadingScreen.style.display = 'flex';
        }
        
        function hideLoadingScreen() {
            const loadingScreen = document.getElementById('loadingScreen');
            loadingScreen.style.display = 'none';
        }

        // Function to show the loading dialog
function showLoadingDialog() {
    const loadingDialog = document.getElementById('loadingDialog');
    loadingDialog.style.display = 'flex';
}

// Function to hide the loading dialog
function hideLoadingDialog() {
    const loadingDialog = document.getElementById('loadingDialog');
    loadingDialog.style.display = 'none';
}
        // Function to show the dialog box
function showDialog(success, message) {
    const dialogOverlay = document.getElementById('dialogOverlay');
    const closeDialogBtn = document.getElementById('closeDialogBtn');

    const dialogBox = dialogOverlay.querySelector('.dialog-box');
    const dialogTitle = dialogBox.querySelector('h3');
    const dialogMessage = dialogBox.querySelector('p');

    dialogTitle.textContent = success ? 'Success!' : 'Error';
    dialogTitle.classList.remove('success', 'error');
    dialogTitle.classList.add(success ? 'success' : 'error');
    dialogMessage.textContent = message;

    dialogOverlay.style.display = 'flex';

    closeDialogBtn.addEventListener('click', () => {
        dialogOverlay.style.display = 'none';
    });
}


        function confirmResetDeviceName() {
            if (confirm("Are you sure you want to reset the device name? This action will redirect you to the dashboard page.")) {
                // Get the device name from the DOM
                const deviceNameDisplay = document.getElementById('deviceNameDisplay');
                const deviceName = deviceNameDisplay ? deviceNameDisplay.textContent : '';
        
                // Redirect to dashboard page with device name as query parameter
                window.location.href = "/dashboard?deviceName=" + encodeURIComponent(deviceName);
            }
        }
        // Function to close the dialog
function closeDialog(dialogId) {
    document.getElementById(dialogId).style.display = 'none';
    }
        function showInput(operation) {
            console.log('Clicked operation:', operation);
            const inputContainer = document.getElementById('inputContainer');
            inputContainer.innerHTML = ''; // Clear previous input forms

            let formHtml = '';
            let deviceName = '<%= deviceName %>'; // Use the device name from the server
            switch (operation) {
                case 'changePrimaryUser':
                    formHtml = `
                    <form action="/changePrimaryUser" method="POST" class="input-container">
                        <h2>Change Primary User</h2>
                        <input type="hidden" id="deviceNameHidden" name="deviceName" value="${deviceName}">

                        <input type="text" id="deviceNameDisplay" name="deviceNameDisplay" class="input-field" value="${deviceName}" readonly>
                        <input type="email" id="newPrimaryUserEmail" name="UserEmail" class="input-field" placeholder="New Primary User's Email" required>
                        <button type="submit" class="submit-btn">Submit</button>
                      </form>                       
                    `;
                    break;
                case 'removeDevice':
                    formHtml = `
                    <form action="/deleteDevice" method="POST" class="input-container">
                        <h2>Remove Device</h2>
                        <input type="hidden" id="deviceNameHidden" name="deviceName" value="${deviceName}">
                        <input type="text" id="deviceNameDisplay" name="deviceNameDisplay" class="input-field" value="${deviceName}" readonly>
                        <p>Are you sure you want to remove this device?</p>
                        <button type="submit" class="submit-btn">Confirm Removal</button>
                      </form>
                    `;
                    break;
                case 'iphoneLost':
                    formHtml = `
                    <form action="/iphoneLost" method="POST" class="input-container">
                        <h2>iPhone Lost</h2>
                        <input type="hidden" id="deviceNameHidden" name="deviceName" value="${deviceName}">
                        <input type="text" id="deviceNameDisplay" name="deviceNameDisplay" class="input-field" value="${deviceName}" readonly>
                        <input type="text" id="serialNumber" name="serialNumber" class="input-field" placeholder="Serial Number" required>
                        <input type="text" id="phoneNumber" name="phoneNumber" class="input-field" placeholder="Device Phone Number" required>
                        <input type="email" id="emailAddress" name="emailAddress" class="input-field" placeholder="Email Address" required>
                        <button type="submit" class="submit-btn">Submit</button>
                      </form>
                    `;
                    break;
                case 'bitlockerKey':
                    formHtml = `
                    <form action="/bitlockerKey" method="POST" class="input-container">
                        <h2>BitLocker Key</h2>
                        <input type="hidden" id="deviceNameHidden" name="deviceName" value="${deviceName}">
                        <input type="text" id="deviceNameDisplay" name="deviceNameDisplay" class="input-field" value="${deviceName}" readonly>
                        <input type="text" id="userName" name="userName" class="input-field" placeholder="User Name" required>
                        <select id="driveType" name="driveType" class="input-field" required>
                            <option value="">Select Drive Type</option>
                            <option value="osdrive">Operating System Drive</option>
                            <option value="fixeddatadrive">FixedDataDrive</option>
                        </select>
                        <select id="recoveryReason" name="recoveryReason" class="input-field" required>
                          <option value="">Select a reason</option>
                          <option value="forgottenPin">Forgotten PIN</option>
                          <option value="tpmLockout">TPM Lockout</option>
                          <option value="hardwareFail">Hardware Failure</option>
                          <option value="osUpgrade">OS Upgrade</option>
                          <option value="other">Other</option>
                        </select>
                        <input type="text" id="otherReason" name="otherReason" class="input-field" placeholder="Please specify" style="display: none;">
                        <button type="submit" class="submit-btn">Submit</button>
                      </form>
                    `;
                    break;
            }

            inputContainer.innerHTML = formHtml;
            highlightActiveMenuItem(operation);
        }
        
        function setHiddenValue() {
            const visibleField = document.getElementById('deviceName');
            const hiddenField = document.getElementById('deviceNameHidden');
            hiddenField.value = visibleField.value;
            return true;  // Allow the form to be submitted
        }
        function highlightActiveMenuItem(operation) {
            const menuItems = document.querySelectorAll('.sidebar-menu a');
            menuItems.forEach(item => {
                item.classList.remove('active');
                if (item.getAttribute('onclick').includes(operation)) {
                    item.classList.add('active');
                }
            });
        }

        function resetDeviceName() {
            document.getElementById('resetDialog').style.display = 'flex';
        }

        function logout() {
            if (confirm('Are you sure you want to log out?')) {
                window.location.href = '/logout';
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const defaultOperation = 'changePrimaryUser';
            const defaultDeviceName = '<%= deviceName %>'; 
            showInput(defaultOperation,defaultDeviceName);
        });

        
// Add an event listener to your form submissions
// Add an event listener to your form submissions
// Add an event listener to your form submissions
//const forms = document.querySelectorAll('form');
const forms = document.querySelectorAll('form');
forms.forEach(form => {
    form.addEventListener('submit', async (event) => {
        event.preventDefault();
        showLoadingDialog(); // Show the loading dialog before submitting the form

        const formData = new FormData(event.target);
        const response = await fetch(event.target.action, {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        showDialog(data.success, data.message);
        hideLoadingDialog(); // Hide the loading dialog after receiving the response
    });
});
function showDialog(success, message) {
    const dialogOverlay = document.getElementById('dialogOverlay');
    const closeDialogBtn = document.getElementById('closeDialogBtn');

    const dialogBox = dialogOverlay.querySelector('.dialog-box');
    const dialogTitle = dialogBox.querySelector('h3');
    const dialogMessage = dialogBox.querySelector('p');

    dialogTitle.textContent = success ? 'Success!' : 'Error';
    dialogTitle.classList.remove('success', 'error');
    dialogTitle.classList.add(success ? 'success' : 'error');
    dialogMessage.textContent = message;

    dialogOverlay.style.display = 'flex';

    closeDialogBtn.addEventListener('click', () => {
        dialogOverlay.style.display = 'none';
    });
}
    </script>
</body>
</html>